[{"/Users/sblan45/Desktop/Actualize/covid_data/src/index.js":"1","/Users/sblan45/Desktop/Actualize/covid_data/src/components/Header.js":"2","/Users/sblan45/Desktop/Actualize/covid_data/src/components/GraphCountry.js":"3","/Users/sblan45/Desktop/Actualize/covid_data/src/components/USDataBlock.js":"4","/Users/sblan45/Desktop/Actualize/covid_data/src/components/USAStates.js":"5","/Users/sblan45/Desktop/Actualize/covid_data/src/components/Graph.js":"6"},{"size":178,"mtime":1615847421358,"results":"7","hashOfConfig":"8"},{"size":604,"mtime":1615335174715,"results":"9","hashOfConfig":"8"},{"size":4103,"mtime":1615339153075,"results":"10","hashOfConfig":"8"},{"size":2778,"mtime":1615861140368,"results":"11","hashOfConfig":"8"},{"size":11165,"mtime":1615859745434,"results":"12","hashOfConfig":"8"},{"size":4732,"mtime":1615758746060,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"2iuuh2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sblan45/Desktop/Actualize/covid_data/src/index.js",["30"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport * as V from \"victory\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n",["31","32"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/Header.js",[],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/GraphCountry.js",["33"],"import React from 'react'\nimport { VictoryLine, VictoryChart, VictoryAxis, VictoryBrushContainer, VictoryZoomContainer } from 'victory';\n\nclass GraphCountry extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      months: {\n        0: \"Jan\",\n        1: \"Feb\",\n        2: \"Mar\",\n        3: \"Apr\",\n        4: \"May\",\n        5: \"June\",\n        6: \"July\",\n        7: \"Aug\",\n        8: \"Sep\",\n        9: \"Oct\",\n        10: \"Nov\",\n        11: \"Dec\"\n      }\n    }\n  }\n\n  handleZoom(domain) {\n    this.setState({selectedDomain: domain});\n  }\n\n  handleBrush(domain) {\n    this.setState({zoomDomain: domain});\n  }\n\n componentDidUpdate(prevProps) {\n   if (prevProps.country !== this.props.country) {\n     this.setState({\n       zoomDomain: null\n     })\n   }\n   if (prevProps.yAxisCountries !== this.props.yAxisCountries) {\n    this.setState({\n      zoomDomain: null\n    })\n  }\n }\n\n  render() {\n    const covidData = this.props.covidCountryData.map((data) => {\n      let yData = data.confirmed\n      if (this.props.yAxisCountries === 'confirmed') {\n        yData = data.confirmed\n      } else if ( this.props.yAxisCountries === 'deaths') {\n        yData = data.deaths\n      } else if ( this.props.yAxisCountries === 'recovered') {\n        yData = data.recovered\n      } else if (this.props.yAxisCountries === 'new_deaths') {\n        yData = data.new_deaths\n      } else if (this.props.yAxisCountries === 'new_confirmed') {\n        yData = data.new_confirmed\n      } \n      const dateString = data.date\n      const year = dateString.substring(0, 4);\n      // console.log(year)\n      const yearNum = parseInt(year)\n      const month = dateString.substring(5, 7);\n      // console.log(month)\n      const monthNum = parseInt(month) - 1\n      const day = dateString.substring(8, 10);\n      // console.log(day)\n      const dayNum = parseInt(day)\n      return {\n        x: new Date(yearNum, monthNum, dayNum), \n        y: yData,\n        day: day\n      }\n    })\n    // console.log(covidData.filter(data => data.day == 13))\n    return (\n      <div>\n        <div className=\"graph\">\n          <VictoryChart\n            width={600}\n            height={300}\n            padding={{top: 10, left: 100, right: 50, bottom: 30}}\n            scale={{x: \"time\"}}\n            containerComponent={\n              <VictoryZoomContainer responsive={false}\n                zoomDimension=\"x\"\n                zoomDomain={this.state.zoomDomain}\n                onZoomDomainChange={this.handleZoom.bind(this)}\n              />\n            }\n          >\n            <VictoryLine\n            className=\"victory\"\n              style={{\n                data: {stroke: \"tomato\"}\n              }}\n              data={covidData}\n            />\n          </VictoryChart>\n          <VictoryChart\n            width={600}\n            height={90}\n            scale={{x: \"time\"}}\n            padding={{top: 0, left: 100, right: 50, bottom: 30}}\n            containerComponent={\n              <VictoryBrushContainer responsive={false}\n                brushDimension=\"x\"\n                brushDomain={this.state.selectedDomain}\n                onBrushDomainChange={this.handleBrush.bind(this)}\n              />\n            }\n          >\n            <VictoryAxis\n              tickValues={covidData.filter(data => data.day == 20).map((data) => {\n                return data.x\n              })}\n              tickFormat={(x) => `${this.state.months[x.getMonth()]}`}\n                            //REVIEW THIS \n              // tickFormat={\n              //   (x) => {\n              //     if (x.getFullYear() === 2000) {\n              //       return x.getFullYear();\n              //     }\n              //     if (x.getFullYear() % 5 === 0) {\n              //       return x.getFullYear().toString().slice(2);\n              //     }\n              //   }\n              // }\n            />\n            <VictoryLine\n              style={{\n                data: {stroke: \"tomato\"}\n              }}\n              data={covidData}\n            />\n          </VictoryChart>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nexport default GraphCountry",["34","35"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/USDataBlock.js",[],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/USAStates.js",["36","37"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/Graph.js",["38","39","40"],{"ruleId":"41","severity":1,"message":"42","line":4,"column":13,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":115,"column":61,"nodeType":"51","messageId":"52","endLine":115,"endColumn":63},{"ruleId":"45","replacedBy":"53"},{"ruleId":"47","replacedBy":"54"},{"ruleId":"49","severity":1,"message":"50","line":121,"column":27,"nodeType":"51","messageId":"52","endLine":121,"endColumn":29},{"ruleId":"49","severity":1,"message":"50","line":231,"column":32,"nodeType":"51","messageId":"52","endLine":231,"endColumn":34},{"ruleId":"41","severity":1,"message":"42","line":2,"column":13,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"55","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":131,"column":61,"nodeType":"51","messageId":"52","endLine":131,"endColumn":63},"no-unused-vars","'V' is defined but never used.","Identifier","unusedVar","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["56"],["57"],"'moment' is defined but never used.","no-global-assign","no-unsafe-negation"]