[{"/Users/sblan45/Desktop/Actualize/covid_data/src/App.js":"1","/Users/sblan45/Desktop/Actualize/covid_data/src/components/CountriesMap.js":"2","/Users/sblan45/Desktop/Actualize/covid_data/src/components/StateMap.js":"3","/Users/sblan45/Desktop/Actualize/covid_data/src/index.js":"4","/Users/sblan45/Desktop/Actualize/covid_data/src/components/Graph.js":"5","/Users/sblan45/Desktop/Actualize/covid_data/src/components/GraphCountry.js":"6"},{"size":621,"mtime":1614655568423,"results":"7","hashOfConfig":"8"},{"size":1726,"mtime":1618276022854,"results":"9","hashOfConfig":"8"},{"size":2558,"mtime":1618276022864,"results":"10","hashOfConfig":"8"},{"size":178,"mtime":1615847421000,"results":"11","hashOfConfig":"8"},{"size":4707,"mtime":1617668956052,"results":"12","hashOfConfig":"8"},{"size":4099,"mtime":1617676906375,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2iuuh2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sblan45/Desktop/Actualize/covid_data/src/App.js",[],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/CountriesMap.js",["28","29"],"import React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule\n} from \"react-simple-maps\";\n\n\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst CountriesMap = ({riskLevels}) => {\n  const [data, setData] = useState([]);\n  console.log(riskLevels)\n\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then((data) => {\n      setData(data);\n    });\n  }, []);\n\n  return (\n    <ComposableMap\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 147\n      }}\n    >\n      <Sphere stroke=\"black\" strokeWidth={0.5} />\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n      {data.length > 0 && (\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              let riskLevel = \"\"\n              const d = geo.properties.ISO_A2;\n              riskLevels.map(risk => {\n                if (risk.attributes.iso === d){\n                  riskLevel = risk.attributes.covid_thn\n                }\n              })\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  stroke=\"white\"\n                  geography={geo}\n                  fill={riskLevel === \"999\" ? \"grey\" : riskLevel === \"1\" ? \"yellow\" : riskLevel === \"2\" ? \"orange\" : riskLevel === \"3\" ? \"red\" : riskLevel === \"4\" ? \"maroon\" : geo.properties.ISO_A2 === \"US\" ? \"maroon\" : \"white\"}\n                />\n              );\n            })\n          }\n        </Geographies>\n      )}\n    </ComposableMap>\n  );\n};\n\nexport default CountriesMap",["30","31"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/StateMap.js",["32","33"],"/Users/sblan45/Desktop/Actualize/covid_data/src/index.js",["34"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/Graph.js",["35","36"],"/Users/sblan45/Desktop/Actualize/covid_data/src/components/GraphCountry.js",["37"],{"ruleId":"38","severity":1,"message":"39","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":21},{"ruleId":"42","severity":1,"message":"43","line":43,"column":35,"nodeType":"44","messageId":"45","endLine":43,"endColumn":37},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"43","line":36,"column":38,"nodeType":"44","messageId":"45","endLine":36,"endColumn":40},{"ruleId":"50","severity":1,"message":"51","line":37,"column":33,"nodeType":"52","messageId":"53","endLine":37,"endColumn":35},{"ruleId":"38","severity":1,"message":"54","line":4,"column":13,"nodeType":"40","messageId":"41","endLine":4,"endColumn":14},{"ruleId":"38","severity":1,"message":"54","line":2,"column":13,"nodeType":"40","messageId":"41","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":130,"column":61,"nodeType":"52","messageId":"53","endLine":130,"endColumn":63},{"ruleId":"50","severity":1,"message":"51","line":115,"column":61,"nodeType":"52","messageId":"53","endLine":115,"endColumn":63},"no-unused-vars","'scaleLinear' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'V' is defined but never used.","no-global-assign","no-unsafe-negation"]